name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - name: Set timestamp in a variable
      id: timestamp
      run: |
        echo "::set-output name=timestamp::$(date +%s)"

     

    - name: Set up PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '7.4' # Change to your PHP version

      
    

    - uses: actions/checkout@v3
    - name: Login to Docker Hub
      run: docker login -u ghalibbajwa -p porsche911

    - name: Composer Install
      run: composer install

    - name: Copy env
      run: cp .env.example .env

      
    - name: Build and tag Docker image
      run: |
        TIMESTAMP=$(echo "${{ steps.timestamp.outputs.timestamp }}")
        docker build . --tag ghalibbajwa/slogr-controller-laravel:${TIMESTAMP}

    - name: Push Docker image
      run: |
        TIMESTAMP=$(echo "${{ steps.timestamp.outputs.timestamp }}")
        docker push ghalibbajwa/slogr-controller-laravel:${TIMESTAMP}

    - name: Azure Login
      uses: Azure/login@v1.4.6
      with:
        creds: ${{ secrets.AKS }}

    - name: Update container image in Kubernetes deployment
      run: |
        TIMESTAMP=$(echo "${{ steps.timestamp.outputs.timestamp }}")
        RESOURCE_GROUP="rancher-rg"
        AKS_CLUSTER="slogr"
        DEPLOYMENT_NAME="saas-api"
        CONTAINER_NAME="app"
        NEW_IMAGE= ghalibbajwa/slogr-controller-laravel:${TIMESTAMP}

          # Update the container image in the deployment
          az aks get-credentials --resource-group $RESOURCE_GROUP --name $AKS_CLUSTER --overwrite-existing
          kubectl set image deployment/$DEPLOYMENT_NAME $CONTAINER_NAME=$NEW_IMAGE

